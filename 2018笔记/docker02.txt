workdir 
expose  指定容器要开放的端口

cat /usr/lib/systemd/system/httpd.service
EnvironmentFile=/etc/sysconfig/httpd
/usr/sbin/httpd $OPTIONS -DFOREGROUND


FROM myos:latest
RUN yum -y install httpd
ENV EnvironmentFile=/etc/sysconfig/httpd
WORKDIR /var/www/html
RUN echo  hello wolrd > index.html
EXPOSE 80
EXPOSE 443
CMD ["/usr/sbin/httpd", "-DFOREGROUND"]  

# docker run -itd myos:httpd

注意 一个Dockerfile只能有一条CMD

# cat Dockerfile 
FROM myos:sshd
RUN yum -y install httpd
ENV EnvironmentFile=/etc/sysconfig/httpd
WORKDIR /var/www/html
RUN echo  hello wolrd > index.html
EXPOSE 80
EXPOSE 443
ADD run.sh /etc/rc.d/init.d/run.sh
CMD ["/etc/rc.d/init.d/run.sh"]



# cat run.sh 
#!/bin/bash
/usr/sbin/sshd -D &
/usr/sbin/httpd -DFOREGROUND


# vim /etc/docker/daemon.json

{
  "insecure-registries" :["192.168.1.11:5000"]
}

# docker rm $(docker ps -aq)

# systemctl restart docker

# docker run -itd -p 5000:5000 registry  启动docker私有仓库,我们可以看到上帝是一个shell脚本

firefox http://192.168.8.51:5000/v2/    

# docker tag busybox:latest 192.168.8.51:5000/busybox:latest  打标签 
# docker push 192.168.8.51:5000/busybox:latest 	  上传


# for i in latest nginx ubuntu redis;do
> docker tag myos:${i} 192.168.8.51:5000/myos:${i}
> docker push 192.168.8.51:5000/myos:${i}
> done

# docker run -it 192.168.8.51:5000/busybox:latest  使用

http://192.168.8.51:5000/v2/_catalog
http://192.168.8.51:5000/v2/myos/tags/list

docker 容器不保持任何数据
重要数据 请使用外部卷存储(数据持久化)
容器可以挂载真实机目录或共享存储为卷
ls -1 /root


# docker run -v /data:/data  -it myos


创建虚拟网卡
cp ifcfg-eth0 ifcfg-eth0:1

# Generated by dracut initrd
DEVICE="eth0:1"
ONBOOT="yes"
IPV6INIT="no"
IPV4_FAILURE_FATAL="no"
NM_CONTROLLED="no"
TYPE="Ethernet"
#BOOTPROTO="static"
IPADDR="192.168.8.101"
NETMASK="255.255.255.0"
#GATEWAY=192.168.8.254

# cp ifcfg-eth0 ifcfg-br0
创建虚拟交换机
# Generated by dracut initrd
DEVICE="br0"
ONBOOT="yes"    开机启动
IPV6INIT="no"      没用,可删除 
IPV4_FAILURE_FATAL="no"   没用,可删除   
NM_CONTROLLED="no"    拒绝NetWorkManager管理
TYPE="Bridge"
BOOTPROTO="static"
IPADDR="192.168.8.102"
NETMASK="255.255.255.0"
#GATEWAY=192.168.8.254


# yum install bridge-utils 要装虚拟交换机的工具包

# docker network list


# docker network --help
# docker network create --help

# docker network create --subnet 10.10.10.0/24 docker1

# docker network ls

# docker run -itd --network docker1 myos:httpd
# docker run -itd --network docker1 myos:httpd

# docker exec -it a7 /bin/bash


	


# docker run -itd -p 80:80 -v /var/webroot:/var/www/html myos:httpd

curl -i 192.168.8.51


# docker run -itd -p 80:80 -v /var/webroot:/usr/share/nginx/html nginx:latest

docker 是直接封装的应用程序执行环境

k8s是一个编排容器的工具










